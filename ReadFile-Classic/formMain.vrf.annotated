// ## AVR Classic program to read a file.
// ---
// Version 1.0
// ---

// AVR Classic doesn't a separate DB connection object. 
// The DclDiskFile's DBDesc keyword provides the database name. 
// AVR Classic's DB connection implicitly connects when a file is opened.
DclDiskFile  Name(CustomerRO) +
             Type(*INPUT) +
             Org(*INDEXED) +
             Prefix(Customer_) +
             ImpOpen(*No) +
             FileDesc('Examples/CMastNewL1') +                       
             DBDesc('*Public/DG Net Local')

// A global variable to govern canceling program.
DclFld Cancel Type(*Ind) 

// Center this form in the monitor window.
// AVR Classic forms don't have a property to center a form. 
// Also noticed that this is mainline code. AVR Classic supports
// executable code in the mainline; AVR for .NET doesn't. AVR Classic 
// doesn't have a form Load event--you'd generally put setup code in 
// in a form's mainline in AVR Classic. (In AVR for .NET you'd probably
// put it in the form's Load event handler.)
*ThisForm.Top  =   (*Screen.Height - *ThisForm.Height) / 2
*ThisForm.Left =   (*Screen.Width  - *ThisForm.Width ) / 2

labelCustomerName.Caption = ""

Open CustomerRO

BegSr buttonRead Click
    PrepInterface()
    ReadFile()
    PrepInterface()
EndSr

BEGSR buttonExit Click
    Exsr EndProgram
ENDSR

BEGSR buttonCancel Click
    Cancel = *On  
ENDSR

// A form's QueryUnload is like AVR for .NET's form's FormClosing event.
// There is no other form closing event in AVR Classic. If the Cancel 
// property isn't set to *On, this event is that last place to do 
// program cleanup before the program ends. 
BEGSR formMain QueryUnload
    DclSrParm Cancel TYPE(*IND) BY(*REFERENCE)
    DclSrParm UnloadMode TYPE(*INTEGER) LEN(2) 

    DclConst CONTROL_BOX_CLOSE Value(0)

    //If (UnloadMode = CONTROL_BOX_CLOSE) //AND (buttonCancel.Enabled) 
    If buttonCancel.Enabled 
       Cancel = *On         
    Else
       ExSr EndProgram
    EndIf
ENDSR

// The top-level menu option to end the program.
BEGSR mnuTopFileExit Click
    ExSr EndProgram
ENDSR

// Read a file from beginning to end. 
BegSr ReadFile
    DclFld CustomerEOF Type(*Ind)
    // AVR Classic requires a Len keyword for the *Integer type. 
    DclFld TenPercent    Type(*Integer) Len(4)
    DclFld RecordCount   Type(*Integer) Len(4) 

    // Calculate 10% of the records in the file. 
    TenPercent   = CustomerRO.RecCount / 10
    RecordCount  = 0 

    // Set initial progress bar properties.
    progressbarCustomer.Min     =  0
    progressbarCustomer.Max     = 10 
    // AVR Classic is one-based in most operations. 
    progressbarCustomer.Value   =  1  
    progressbarCustomer.Visible = *On

    // Show 
    SetMousePtr *AppStarting

    Cancel = *Off
    SetLL CustomerRO Key(*LoVal) 

    Read CustomerRO EOF(CustomerEOF)  


    DoWhile (NOT CustomerEOF) AND (NOT Cancel) 
        DoEvents
        // Update progress bar?
        RecordCount = RecordCount + 1
        If (RecordCount >= TenPercent) 
            RecordCount  = 0
            progressbarCustomer.Value = progressbarCustomer.Value + 1
        EndIf 

        //EDDS_CMName = Customer_CMName 
        labelCustomerName.Caption = Customer_CMName
        Read CustomerRO EOF(CustomerEOF)             
    EndDo
    progressbarCustomer.Visible = *Off
    SetMousePtr *Dft
EndSr

BegSr PrepInterface
    // Toggle buttons' Enabled property. 
    buttonRead.Enabled   = (NOT buttonRead.Enabled) 
    buttonCancel.Enabled = (NOT buttonCancel.Enabled) 
    buttonExit.Enabled   = (NOT buttonExit.Enabled) 
EndSr

BegSr EndProgram
    Close CustomerRO
    ExitApp 
EndSr